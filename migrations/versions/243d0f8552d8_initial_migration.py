"""initial migration

Revision ID: 243d0f8552d8
Revises: 
Create Date: 2017-02-27 16:43:11.182503

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '243d0f8552d8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('feedback',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=60), nullable=True),
                    sa.Column('email', sa.String(length=254), nullable=True),
                    sa.Column('subject', sa.String(length=50), nullable=False),
                    sa.Column('message', sa.String(length=500), nullable=False),
                    sa.Column('timestamp', sa.DateTime(), nullable=False),
                    sa.Column('addressed', sa.Boolean(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('roles',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=64), nullable=True),
                    sa.Column('permissions', sa.Integer(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('tags',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=50), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('users',
                    sa.Column('guid', sa.String(length=64), nullable=False),
                    sa.Column('auth_user_type',
                              sa.Enum('Saml2In:NYC Employees', 'LDAP:NYC Employees', 'FacebookSSO', 'MSLiveSSO',
                                      'YahooSSO', 'LinkedInSSO', 'GoogleSSO', 'EDIRSSO', 'AnonymousUser',
                                      name='auth_user_type'), nullable=False),
                    sa.Column('is_mod', sa.Boolean(), nullable=False),
                    sa.Column('is_admin', sa.Boolean(), nullable=False),
                    sa.Column('first_name', sa.String(length=128), nullable=True),
                    sa.Column('middle_initial', sa.String(length=1), nullable=True),
                    sa.Column('last_name', sa.String(length=128), nullable=True),
                    sa.Column('email', sa.String(length=254), nullable=True),
                    sa.Column('email_validated', sa.Boolean(), nullable=False),
                    sa.Column('terms_of_use_accepted', sa.Boolean(), nullable=False),
                    sa.PrimaryKeyConstraint('guid')
                    )
    op.create_table('stories',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('activist_first', sa.String(length=64), nullable=False),
                    sa.Column('activist_last', sa.String(length=64), nullable=False),
                    sa.Column('activist_start', sa.Integer(), nullable=True),
                    sa.Column('activist_end', sa.Integer(), nullable=True),
                    sa.Column('content', sa.Text(), nullable=False),
                    sa.Column('activist_url', sa.Text(), nullable=True),
                    sa.Column('image_url', sa.Text(), nullable=True),
                    sa.Column('video_url', sa.Text(), nullable=True),
                    sa.Column('user_guid', sa.String(length=64), nullable=True),
                    sa.Column('date_created', sa.DateTime(), nullable=False),
                    sa.Column('is_edited', sa.Boolean(), nullable=False),
                    sa.Column('is_visible', sa.Boolean(), nullable=False),
                    sa.Column('tags', postgresql.ARRAY(sa.String(length=500)), nullable=True),
                    sa.ForeignKeyConstraint(['user_guid'], ['users.guid'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('comments',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('story_id', sa.Integer(), nullable=True),
                    sa.Column('name', sa.String(length=60), nullable=True),
                    sa.Column('content', sa.String(length=254), nullable=False),
                    sa.Column('date_created', sa.DateTime(), nullable=False),
                    sa.Column('is_edited', sa.Boolean(), nullable=False),
                    sa.Column('is_visible', sa.Boolean(), nullable=False),
                    sa.ForeignKeyConstraint(['story_id'], ['stories.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('modules',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('story_id', sa.Integer(), nullable=True),
                    sa.Column('type', sa.Enum('featured', 'then', 'now', 'event', name='module_type'), nullable=True),
                    sa.Column('title1', sa.String(length=50), nullable=True),
                    sa.Column('title2', sa.String(length=50), nullable=True),
                    sa.Column('activist_first', sa.String(length=128), nullable=True),
                    sa.Column('activist_last', sa.String(length=128), nullable=True),
                    sa.Column('content', sa.String(length=500), nullable=True),
                    sa.Column('media_url', sa.String(length=254), nullable=True),
                    sa.Column('event_date', sa.DateTime(), nullable=True),
                    sa.Column('activist_year', sa.String(length=4), nullable=True),
                    sa.ForeignKeyConstraint(['story_id'], ['stories.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('events',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('story_id', sa.Integer(), nullable=True),
                    sa.Column('comment_id', sa.Integer(), nullable=True),
                    sa.Column('module_id', sa.Integer(), nullable=True),
                    sa.Column('user_guid', sa.String(length=64), nullable=True),
                    sa.Column('type', sa.Enum('story_created', 'user_created', 'story_edited', 'story_deleted',
                                              'comment_edited', 'comment_deleted', 'feature_story_edited',
                                              name='event_type'),
                              nullable=False),
                    sa.Column('timestamp', sa.DateTime(), nullable=False),
                    sa.Column('previous_value', postgresql.JSON(astext_type=sa.Text()), nullable=True),
                    sa.Column('new_value', postgresql.JSON(astext_type=sa.Text()), nullable=True),
                    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ),
                    sa.ForeignKeyConstraint(['module_id'], ['modules.id'], ),
                    sa.ForeignKeyConstraint(['story_id'], ['stories.id'], ),
                    sa.ForeignKeyConstraint(['user_guid'], ['users.guid'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('flags',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('story_id', sa.Integer(), nullable=True),
                    sa.Column('comment_id', sa.Integer(), nullable=True),
                    sa.Column('type',
                              sa.Enum('inappropriate_content', 'incorrect_information', 'offensive_content', 'other',
                                      name='flag_type'), nullable=True),
                    sa.Column('reason', sa.String(length=500), nullable=False),
                    sa.Column('timestamp', sa.DateTime(), nullable=False),
                    sa.Column('addressed', sa.Boolean(), nullable=False),
                    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ),
                    sa.ForeignKeyConstraint(['story_id'], ['stories.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('flags')
    op.drop_table('events')
    op.drop_table('modules')
    op.drop_table('comments')
    op.drop_table('stories')
    op.drop_table('users')
    op.drop_table('tags')
    op.drop_table('roles')
    op.drop_table('feedback')
    # ### end Alembic commands ###
